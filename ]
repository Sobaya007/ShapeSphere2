module game.player.PlayerChaseControl;

import sbylib;
import game.player.Player;

class PlayerChaseControl {

    private static float TURN_SPEED = 2;

    private Camera camera;
    private Player player;
    private vec3 vel;
    private Maybe!vec3 arrival;
    private ConstTemp!float defaultLength, k, c;
    alias Step = Step delegate();
    private Step stepImpl;

    this(Camera camera, Player player) {
        this.camera = camera;
        this.player = player;
        this.defaultLength = ConstantManager.get!float("defaultLength");
        this.k = ConstantManager.get!float("k");
        this.c = ConstantManager.get!float("c");
        this.vel = vec3(0);
        this.stepImpl = &this.normalStep;
    }

    void step() {
        this.stepImpl = this.stepImpl();
    }

    private Step normalStep() {
        auto t = this.player.getCameraTarget();
        auto v = this.camera.getObj().pos - t;
        auto dp = v.length - defaultLength;
        auto dy = v.y;
        v = normalize(v);
        vel -= (k * dp + c * dot(vel, v)) * v;
        vel *= 1 - c;
        auto cobj = this.camera.getObj();
        cobj.pos += vel;
        auto ay = t.y + 3;
        cobj.pos.y = (cobj.pos.y - ay) * 0.9 + ay;
        cobj.lookAt(t);
        return &this.normalStep;
    }

    private Step resetStep() {
        return &this.resetStep;
    }

    void turn(float value) {
        auto v = this.player.getCameraTarget() - this.camera.getObj().pos;
        auto arrival = normalize(cross(vec3(0,1,0),v)) * TURN_SPEED * value;
        auto dif = arrival - vel;
        vel += dif * 0.1;
    }

    void reset() {
        auto mdir = this.player.getLastDirection();
        if (mdir.isNone) return;
        auto dir = mdir.get;
        this.stepImpl = &resetStep;
    }
}
